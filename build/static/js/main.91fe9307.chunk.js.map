{"version":3,"sources":["Landing.js","config.js","services/people-service.js","services/pets-service.js","Adopt.js","Animal.js","Adopt2.js","root/Root.js","index.js"],"names":["Landing","props","to","process","peopleService","getPeople","fetch","config","method","headers","then","res","ok","json","e","Promise","reject","addPerson","person","body","JSON","stringify","petsService","getPets","adopt","type","console","log","React","Component","Animal","pet","age","breed","description","gender","imageURL","name","story","className","src","defaultProps","Adopt2","updateData","setState","people","dog","cat","loaded","handleAdopt","Math","random","handleUserAdopt","userInQueue","userAdopted","adoptedPet","state","handleJoinQueue","fakeIteration","length","names","floor","setTimeout","this","setInterval","onClick","map","idx","key","style","fontSize","Root","exact","path","ReactDOM","render","document","getElementById"],"mappings":"6QAGe,SAASA,EAAQC,GAC9B,OACE,6BACE,0DACA,gGAEA,kBAAC,IAAD,CAAMC,GAAI,UAAU,sD,YCTX,EAEWC,mCCwBXC,EAxBO,CACpBC,UADoB,WAElB,OAAOC,MAAM,GAAD,OAAIC,EAAJ,WAA4C,CACtDC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OACLA,EAAIC,GAAiDD,EAAIE,OAAhDF,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAOC,QAAQC,OAAOF,UAGpDG,UAXoB,SAWVC,GACR,OAAOZ,MAAM,GAAD,OAAIC,EAAJ,WAA4C,CACtDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMC,KAAKC,UAAU,CAAEH,OAAQA,MAC9BR,MAAK,SAACC,GAAD,OACLA,EAAIC,GAAiDD,EAAIE,OAAhDF,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAOC,QAAQC,OAAOF,WCMvCQ,EAzBK,CAClBC,QADkB,WAEhB,OAAOjB,MAAM,GAAD,OAAIC,EAAJ,SAA0C,CACpDC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OACLA,EAAIC,GAAiDD,EAAIE,OAAhDF,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAOC,QAAQC,OAAOF,UAGpDU,MAXkB,SAWZC,GACJ,OAAOnB,MAAM,GAAD,OAAIC,EAAJ,SAA0C,CACpDC,OAAQ,SACRC,QAAS,CACP,eAAgB,oBAElBU,KAAMC,KAAKC,UAAU,CAAEI,KAAMA,MAC5Bf,MAAK,SAAAC,GAEN,OADAe,QAAQC,IAAIhB,EAAIC,IACPD,EAAIC,GAAgCD,EAAIC,GAA/B,SAACE,GAAD,OAAOC,QAAQC,OAAOF,SClBXc,IAAMC,UCF1B,SAASC,EAAQ7B,GAAQ,IAAD,EAC8BA,EAAM8B,IAAjEC,EAD6B,EAC7BA,IAAKC,EADwB,EACxBA,MAAOC,EADiB,EACjBA,YAAaC,EADI,EACJA,OAAQC,EADJ,EACIA,SAAUC,EADd,EACcA,KAAMC,EADpB,EACoBA,MACzD,OACE,yBAAKC,UAAU,OACb,4BAAKF,GACL,yBAAKG,IAAKJ,IACV,sCAAYH,GACZ,uCAAaE,GACb,oCAAUH,GACV,4BAAKE,GACL,2BAAII,IAKVR,EAAOW,aAAe,CACpBV,IAAK,CACHC,IAAK,EACLC,MAAO,QACPC,YAAa,iBACbC,OAAQ,YACRC,SAAU,YACVC,KAAM,UACNC,MAAO,a,ICpBUI,E,YACnB,WAAYzC,GAAQ,IAAD,8BACjB,4CAAMA,KAcR0C,WAAa,WACXvC,EAAcC,YACXK,MAAK,SAAAC,GACJ,EAAKiC,SAAS,CACZC,OAAQlC,OAGdW,EAAYC,UAAUb,MAAK,SAAAC,GACzB,EAAKiC,SAAS,CAAEE,IAAKnC,EAAImC,IAAKC,IAAKpC,EAAIoC,IAAKC,QAAQ,QAvBrC,EA2BnBC,YAAc,WACZ,IAAIxB,EAAOyB,KAAKC,UAAY,GAAM,MAAQ,MAC1C7B,EAAYE,MAAMC,GAAMf,MAAK,WAC3B,EAAKiC,iBA9BU,EAkCnBS,gBAAkB,SAAC3B,GACjBH,EAAYE,MAAMC,GAAMf,MAAK,WAC3B,EAAKkC,SAAS,CACZS,YAAa,KACbC,aAAa,EACbC,WAAY,EAAKC,MAAM/B,QAExBf,MAAK,WACN,EAAKiC,iBA1CU,EA8CnBc,gBAAkB,WACX,EAAKD,MAAMH,aACdjD,EAAca,UAAU,OACrBP,MAAK,SAACC,GACL,EAAKiC,SAAS,CACZS,YAAa,QAEf,EAAKV,iBArDM,EA0DnBe,cAAgB,WACX,EAAKF,MAAMH,aAAe,EAAKG,MAAMH,cAAgB,EAAKG,MAAMX,OAAO,IAEpE,EAAKW,MAAMX,OAAOc,OAAS,IAC7BvD,EAAca,UAAU,EAAKuC,MAAMI,MAAMV,KAAKW,MAAMX,KAAKC,SAAW,EAAKK,MAAMI,MAAMD,UAClFjD,MAAK,WACJoD,WAAW,EAAKb,YAAa,QAE9BvC,MAAK,WACJ,EAAKiC,iBAjEb,EAAKa,MAAQ,CACXX,OAAQ,GACRe,MAAO,CAAC,SAAU,WAAY,QAAS,YAAa,SAAU,UAAW,SACzEd,IAAK,GACLC,IAAK,GACLC,QAAQ,EACRK,YAAa,KACbC,aAAa,EACbC,WAAY,MAVG,E,iFA0EjBQ,KAAKpB,aACLqB,YAAYD,KAAKL,cAAe,O,+BAGxB,IAAD,SACyBK,KAAKP,MAA7BX,EADD,EACCA,OAAQQ,EADT,EACSA,YAChB,OACE,6BACGU,KAAKP,MAAMF,aACV,6BACE,sDACA,kBAACxB,EAAD,CAAQC,IAAKgC,KAAKP,MAAMD,eAI1BQ,KAAKP,MAAMF,aACX,8BAEIS,KAAKP,MAAMH,aAAe,4BAAQY,QAASF,KAAKN,iBAAtB,cAC5B,uDAA6BM,KAAKP,MAAMX,OAAOc,QAC/C,4BACGd,EAAOqB,KAAI,SAAChD,EAAQiD,GACnB,OAAY,IAARA,EACK,wBAAIC,IAAKD,EAAKE,MAAO,CAAEC,SAAU,KAAjC,iBAAsDpD,GACtDiD,EAAM,GACN,wBAAIC,IAAKD,GAAMjD,QAEtB,MAGN,yBAAKqB,UAAU,WACZc,IAAgBR,EAAO,IAAM,4BAAQoB,QAAS,kBAAM,EAAKb,gBAAgB,SAA5C,SAA2DW,KAAKP,MAAMT,IAAIV,MACvGgB,IAAgBR,EAAO,IAAM,4BAAQoB,QAAS,kBAAM,EAAKb,gBAAgB,SAA5C,SAA2DW,KAAKP,MAAMV,IAAIT,OAE1G,yBAAKE,UAAU,WACb,kBAACT,EAAD,CAAQC,IAAKgC,KAAKP,MAAMT,MACxB,kBAACjB,EAAD,CAAQC,IAAKgC,KAAKP,MAAMV,a,GA/GFlB,IAAMC,W,OCsB3B0C,E,YAnBb,WAAYtE,GAAQ,IAAD,8BACjB,4CAAMA,KACDuD,MAAQ,GAFI,E,sEAOjB,OACE,6BACE,sCACA,kBAAC,IAAD,KACE,kBAACxD,EAAD,CAASwE,OAAK,EAACC,KAAM,MACrB,kBAAC,EAAD,CAAQA,KAAM,iB,GAbL7C,IAAMC,WCAzB6C,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.91fe9307.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Landing(props) {\n  return (\n    <div>\n      <h2>quickly adopt a new friend</h2>\n      <p>welcome to petful, your one stop shop to adopting a cat or a dog.</p>\n      \n      <Link to={'/adopt'}><button>Lets adopt a Pet</button></Link>\n    </div>\n  )\n}","export default {\n  //REACT_APP_API_ENDPOINT: 'http://localhost:8000'\n  REACT_APP_API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT || 'http://localhost:8000'\n}","import config from \"../config\";\n\nconst peopleService = {\n  getPeople() {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  addPerson(person) {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/people`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ person: person })\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n};\n\nexport default peopleService;","import config from \"../config\";\n\nconst petsService = {\n  getPets() {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/pets`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    }).then((res) =>\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n  adopt(type) {\n    return fetch(`${config.REACT_APP_API_ENDPOINT}/pets`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ type: type }),\n    }).then(res => {\n      console.log(res.ok);\n      return (!res.ok ? (e) => Promise.reject(e) : res.ok)\n    });\n  },\n};\n\nexport default petsService;","import React from 'react'\nimport peopleService from './services/people-service'\nimport petsService from './services/pets-service'\n\nexport default class Adopt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dog: {\n        age: 3,\n        breed: \"Golden Retriever\",\n        description:\n          \"A smiling golden-brown golden retreiver listening to music.\",\n        gender: \"Male\",\n        imageURL:\n          \"https://images.pexels.com/photos/33053/dog-young-dog-small-dog-maltese.jpg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        name: \"Zim\",\n        story: \"Owner Passed away\",\n      },\n      cat: {\n        age: 3,\n        breed: \"Tabby\",\n        description: \"boxer dog\",\n        gender: \"Male\",\n        imageURL:\n          \"https://images.pexels.com/photos/1472999/pexels-photo-1472999.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        name: \"Vince the Pince\",\n        story: \"Found in neighborhood\",\n      },\n      people: null,\n      error: null,\n      autoAdopt: true,\n      count: 0,\n      adopted: null,\n      name: null,\n      inLine: false,\n      message: null\n    };\n  }\n\nupdatePets = () => {\n  return petsService.getPets().then(res => {\n    this.setState({ dog: res.dog, cat: res.cat });\n  });\n}\n\nupdatePeople = () => {\n  peopleService.getPeople().then(res => {\n    let peopleArr = res.filter(person => person !== null);\n    this.setState({ people: [...peopleArr] });\n  });\n}\n\nadoptCat = () => {\n  petsService.adopt(\"cat\").then(() => {\n    this.setState((prevState) => ({\n      people: prevState.people.slice(1),\n    }));\n    this.setState({ name: null });\n    this.setState({ adopted: \"Meow! You adopted a cat :)\" });\n    this.setState({ inLine: false });\n  });\n  this.updatePeople();\n  this.updatePets();\n}\n\nadoptDog = () => {\n  petsService.adopt(\"dog\").then(() => {\n    this.setState((prevState) => ({\n      people: prevState.people.slice(1),\n    }));\n    this.setState({ name: null });\n    this.setState({ adopted: \"Woof! You adopted a dog :)\" });\n    this.setState({ inLine: false });\n  });\n  this.updatePeople();\n  this.updatePets();\n}\n\npeopleString = () => {\n  let result = \"\";\n  if (this.state.people) {\n    for (let i = 0; i < this.state.people.length; i++) {\n      if (\n        i === this.state.people.length - 1 &&\n        this.state.people.length !== 1\n      ) {\n        result = result + \"and \" + this.state.people[i];\n        break;\n      }\n      result = result + this.state.people[i] + \", \";\n    }\n  }\n  return result;\n}\n\n\nserveACustomer = () => {\n  if (!this.state.error) {\n    if (this.state.people && this.state.people[0] !== this.state.name) {\n      if (this.state.people && this.state.people.length > 1) {\n        let die = Math.floor(Math.random() * 2) + 1;\n        let type = \"cat\";\n        if (die === 2) {\n          type = \"dog\";\n        }\n        petsService\n          .adopt(type)\n          .then(() => {\n            this.setState((prevState) => ({\n              people: prevState.people.slice(1),\n            }));\n          })\n          .then(() => {\n            this.updatePets();\n          })\n          .catch((e) => this.setState({ error: e.message }));\n      }\n    }\n    if (this.state.people && this.state.people.length < 5) {\n      let people = [\"Dana\", \"Samantha Power\", \"Alister Crowley\", \"Max Michaels\"];\n      let person = people[this.state.count % people.length];\n\n      peopleService.addPerson(person).then((res) => {\n        this.setState((prevState) => ({\n          people: [...prevState.people, person],\n        }));\n\n        this.setState((prevState) => ({ count: prevState.count + 1 }));\n      });\n    }\n  }\n}\n\ngetInLine = (e) => {\n  e.preventDefault();\n  if (!this.state.inLine) {\n    const { name } = e.target;\n    e.target.value = '';\n    this.setState({ name: name.value, inLine: true })\n    .then(() => {\n      peopleService.addPerson(name.value)\n      this.updatePeople();\n    });\n  } else {\n    this.setState({ message: \"You are already in line!\" });\n  }\n}\n\ncomponentDidMount() {\n  this.updatePets();\n  this.updatePeople();\n  setInterval(this.serveACustomer, 10000, 0);\n}\n\nrender() {\n  if (this.state.people && this.state.people[0] !== this.state.name) {\n    return (\n      <section>\n        <p>{this.state.message}</p>\n        <form onSubmit={this.getInLine}>\n          <label htmlFor=\"name\">Your name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" />\n          <input type=\"submit\" value=\"Get In Line\" />\n        </form>\n        <p>{this.state.adopted}</p>\n        <p>\n          The current queue is: {this.peopleString()}. The pets up for\n            adoption are:\n          </p>{\" \"}\n        <br />\n        <div className=\"petDisplay\">\n          <p>\n            First we have {this.state.cat.name} a {this.state.cat.age} year\n              old {this.state.cat.gender} {this.state.cat.breed} whose story is\n              \"{this.state.cat.story}\"\n            </p>\n          <br />\n          <img\n            src={this.state.cat.imageURL}\n            alt={this.state.cat.description}\n          />\n          <br />\n        </div>\n        <div className=\"petDisplay\">\n          <p>\n            {\" \"}\n              And next is {this.state.dog.name} a {this.state.cat.age} year old{\" \"}\n            {this.state.dog.gender} {this.state.dog.breed} whose story is \"\n              {this.state.dog.story}\"\n            </p>\n          <br />\n          <img\n            src={this.state.dog.imageURL}\n            alt={this.state.dog.description}\n          />\n          <br />\n        </div>\n      </section>\n    );\n  } else {\n    return (\n      <section>\n        <p>{this.state.adopted}</p>\n        <p>\n          The current queue is: {this.peopleString()}. The pets up for\n            adoption are:\n          </p>{\" \"}\n        <br />\n        <button onClick={this.adoptCat}>Adopt the cat {this.state.cat.name}!</button>\n        <button onClick={this.adoptDog}>Adopt the dog {this.state.dog.name}!</button>\n        <div className=\"petDisplay\">\n          <p>\n            First we have {this.state.cat.name} a {this.state.cat.age} year\n              old {this.state.cat.gender} {this.state.cat.breed} whose story is\n              \"{this.state.cat.story}\"\n            </p>\n          <br />\n          <img\n            src={this.state.cat.imageURL}\n            alt={this.state.cat.description}\n          />\n          <br />\n        </div>\n        <div className=\"petDisplay\">\n          <p>\n            {\" \"}\n              And next is {this.state.dog.name} a {this.state.cat.age} year old{\" \"}\n            {this.state.dog.gender} {this.state.dog.breed} whose story is \"\n              {this.state.dog.story}\"\n            </p>\n          <br />\n          <img\n            src={this.state.dog.imageURL}\n            alt={this.state.dog.description}\n          />\n          <br />\n        </div>\n\n      </section>\n    );\n  }\n}\n}\n","import React from 'react';\n\nexport default function Animal (props) {\n  const { age, breed, description, gender, imageURL, name, story } = props.pet;\n  return (\n    <div className='pet'>\n      <h1>{name}</h1>\n      <img src={imageURL} />\n      <h3>Breed: {breed}</h3>\n      <h3>Gender: {gender}</h3>\n      <h3>Age: {age}</h3>\n      <h3>{description}</h3>\n      <p>{story}</p>\n    </div>\n  )\n}\n\nAnimal.defaultProps = {\n  pet: {\n    age: 0,\n    breed: 'nonoe',\n    description: 'no description',\n    gender: 'no gender',\n    imageURL: 'no imgURL',\n    name: 'no name',\n    story: 'no story'\n  } \n}","import React from 'react';\nimport Animal from './Animal';\nimport peopleService from './services/people-service';\nimport petsService from './services/pets-service';\n\nexport default class Adopt2 extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      people: [],\n      names: ['Agatha', 'Brinette', 'Chris', 'Desdemona', 'Evelyn', 'Francis', 'Grant'],\n      dog: [],\n      cat: [],\n      loaded: false,\n      userInQueue: null,\n      userAdopted: false,\n      adoptedPet: null,\n    }\n  }\n\n  //get value from server and update\n  updateData = () => {\n    peopleService.getPeople()\n      .then(res => {\n        this.setState({\n          people: res\n        });\n      });\n    petsService.getPets().then(res => {\n      this.setState({ dog: res.dog, cat: res.cat, loaded: true });\n    });\n  }\n  //remove\n  handleAdopt = () => {\n    let type = Math.random() >= 0.5 ? 'cat' : 'dog';\n    petsService.adopt(type).then(() => {\n      this.updateData();\n    })\n  }\n\n  handleUserAdopt = (type) => {\n    petsService.adopt(type).then(() => {\n      this.setState({\n        userInQueue: null,\n        userAdopted: true,\n        adoptedPet: this.state[type]\n      })\n    }).then(() => {\n      this.updateData();\n    })\n  }\n\n  handleJoinQueue = () => {\n    if (!this.state.userInQueue) {\n      peopleService.addPerson('You')\n        .then((res) => {\n          this.setState({\n            userInQueue: 'You'\n          })\n          this.updateData();\n        })\n    }\n  }\n\n  fakeIteration = () => {\n    if(this.state.userInQueue && this.state.userInQueue !== this.state.people[0]) {\n      //this.handleAdopt();\n      if (this.state.people.length < 10) {\n        peopleService.addPerson(this.state.names[Math.floor(Math.random() * this.state.names.length)])\n          .then(() => {\n            setTimeout(this.handleAdopt, 2000);\n          })\n          .then(() => {\n            this.updateData();\n          })\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.updateData();\n    setInterval(this.fakeIteration, 5000);\n  }\n\n  render() {\n    const { people, userInQueue } = this.state\n    return (\n      <div>\n        {this.state.userAdopted && (\n          <div>\n            <h1>Congrats, you adopted:</h1>\n            <Animal pet={this.state.adoptedPet} />\n          </div>\n        )}\n\n        {!this.state.userAdopted && (\n          <div>\n            {/* <button onClick={this.handleAdopt}>Adopt</button> */}\n            {!this.state.userInQueue && <button onClick={this.handleJoinQueue}>Join Queue</button>}\n            <h4>Current Adoption Queue: {this.state.people.length}</h4>\n            <ul>\n              {people.map((person, idx) => {\n                if (idx === 0)\n                  return <li key={idx} style={{ fontSize: 40 }}>Currently Up: {person}</li>;\n                else if (idx < 10)\n                  return <li key={idx}>{person}</li>;\n                else\n                  return;\n              })}\n            </ul>\n            <div className='pet-box'>\n              {userInQueue === people[0] && <button onClick={() => this.handleUserAdopt('cat')}>Adopt {this.state.cat.name}</button>}\n              {userInQueue === people[0] && <button onClick={() => this.handleUserAdopt('dog')}>Adopt {this.state.dog.name}</button>}\n            </div>\n            <div className='pet-box'>\n              <Animal pet={this.state.cat} />\n              <Animal pet={this.state.dog} />\n            </div>\n          </div>\n        )}\n\n\n\n\n\n      </div>\n\n\n\n    )\n  }\n}\n\n// idx === 0 ? <li key={idx} style={{ fontSize: 20 }}>Currently Up: {person}</li>\n//   : <li key={idx}>{person}</li>;\n","import React from 'react'\nimport Landing from '../Landing'\nimport Adopt from '../Adopt'\nimport Adopt2 from '../Adopt2'\nimport { Switch } from 'react-router-dom'\n\n\nclass Root extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Petful</h1>\n        <Switch>\n          <Landing exact path={'/'} />\n          <Adopt2 path={'/adopt'} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default Root\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Root from './root/Root'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Root />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}